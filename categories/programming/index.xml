<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>programming - Category - Ã† Software</title><link>https://www.andreaseisele.com/categories/programming/</link><description>programming - Category - Ã† Software</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 04 Nov 2020 19:34:14 +0200</lastBuildDate><atom:link href="https://www.andreaseisele.com/categories/programming/" rel="self" type="application/rss+xml"/><item><title>5 + 1 tips for new IntelliJ IDEA users</title><link>https://www.andreaseisele.com/posts/idea-tips/</link><pubDate>Wed, 04 Nov 2020 19:34:14 +0200</pubDate><author>Author</author><guid>https://www.andreaseisele.com/posts/idea-tips/</guid><description><![CDATA[Why IDEA? It seems like a lot of people have migrated to IntelliJ IDEA over the years. As a long time IDEA user I can attest there are many reasons for that. So if you&rsquo;re willing to make the jump here are some tips to ease your life.
Of course your mileage may vary, and you don&rsquo;t necessarily need to agree with my opinions. That&rsquo;s completely fine. ðŸ˜‰
Import Maven Projects like a Pro I don&rsquo;t really know why that is the case but over the years I&rsquo;ve found that there is one surefire way to correctly import maven projects, and it is not obvious.]]></description></item><item><title>Don't just blindly run mvn clean install...</title><link>https://www.andreaseisele.com/posts/mvn-clean-install/</link><pubDate>Tue, 13 Oct 2020 17:03:00 +0200</pubDate><author>Author</author><guid>https://www.andreaseisele.com/posts/mvn-clean-install/</guid><description><![CDATA[TL;DR Believe me you almost never want to run the install goal.
If you want to create artifacts use this command:
mvn package throw in the occasional -D skipTests if you&rsquo;re feeling adventurous. ðŸ˜‰
If you want to run tests (e.g. in a CI build) use this command:
mvn verify If you&rsquo;re not convinced please keep reading.
about that maven install goal You see mvn clean install has been handed around for years as the goto command to &ldquo;build the software&rdquo;.]]></description></item><item><title>Prevent Hibernate from doing N+1 selects with constructor expression</title><link>https://www.andreaseisele.com/posts/hibernate-np1-dto/</link><pubDate>Fri, 25 Sep 2020 13:00:14 +0200</pubDate><author>Author</author><guid>https://www.andreaseisele.com/posts/hibernate-np1-dto/</guid><description>The Motivation While basic CRUD operations with JPA / Hibernate are easy, every application sooner or later needs to introduce DTO style result objects for specific use cases like projections. That is part of the deal, no OR mapper can do your homework for you.
Luckily JPA gives us a way of specifying exactly what result objects we expect from a query. One way to do that is to use JPQL with its so called &amp;lsquo;constructor expression&amp;rsquo; in the select part of the query.</description></item></channel></rss>